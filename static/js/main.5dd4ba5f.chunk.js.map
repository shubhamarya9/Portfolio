{"version":3,"sources":["components/particleComponent.js","components/Cover.js","components/AboutMe.js","components/contact.js","components/main.js","App.js","serviceWorker.js","index.js","avatar.png"],"names":["particleComponent","react_default","a","createElement","style","position","top","left","width","height","particles_default","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","Cover","HashRouter","lib","className","col","src","img","alt","react_typed_default","strings","typeSpeed","backSpeed","loop","class","href","aria-hidden","id","Component","AboutMe","Contact","Main","Switch","Route","exact","path","component","App","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5dd4ba5f.chunk.js","sourcesContent":["import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nexport default () => (\n  <div\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    }}\n  >\n    <Particles\n      params={{\n        particles: {\n          number: {\n            value: 350,\n            density: {\n              enable: false\n            }\n          },\n          size: {\n            value: 8,\n            random: true,\n            anim: {\n              speed: 6,\n              size_min: 0.7\n            }\n          },\n          line_linked: {\n            enable: false\n          },\n          move: {\n            random: true,\n            speed: 2,\n            direction: \"top\",\n            out_mode: \"out\"\n          }\n        },\n        interactivity: {\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"bubble\"\n            },\n            onclick: {\n              enable: true,\n              mode: \"repulse\"\n            }\n          },\n          modes: {\n            bubble: {\n              distance: 250,\n              duration: 2,\n              size: 0,\n              opacity: 0\n            },\n            repulse: {\n              distance: 400,\n              duration: 4\n            }\n          }\n        }\n      }}\n    />\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport img from \"../avatar.png\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport ParticleComponent from \"./particleComponent\";\nimport Typed from \"react-typed\";\n\nclass Cover extends Component {\n  render() {\n    return (\n      <Router>\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n          <ParticleComponent />\n          <div\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\"\n            }}\n          >\n            <Grid className=\"landing-grid\">\n              <ParticleComponent />\n              <Cell col={12}>\n                <img src={img} className=\"avatar-img\" alt=\"animoji\" />\n                <div className=\"type-writer\">\n                  <h1>\n                    <Typed\n                      strings={[\"Shubham Arya\"]}\n                      typeSpeed={100}\n                      backSpeed={80}\n                      loop\n                    />\n                  </h1>\n                </div>\n                <div className=\"description\">\n                  <h1>\n                    <i class=\"fas fa-code\" />\n                    Web Developer\n                  </h1>\n                  <hr />\n                  <p>\n                    HTML/CSS | JavaScript | React | NodeJS | Express | MongoDB\n                  </p>\n                </div>\n              </Cell>\n            </Grid>\n            <div className=\"social-links\">\n              <h3>\n                My Social Links: <br />\n              </h3>\n\n              <a href=\"www.linkedin.com\">\n                <i\n                  className=\"fab fa-linkedin linkd\"\n                  aria-hidden=\"true\"\n                  id=\"linkedin\"\n                />\n              </a>\n              <a href=\"www.instagram.com\">\n                <i className=\"fab fa-instagram\" aria-hidden=\"true\" id=\"insta\" />\n              </a>\n              <a href=\"www.github.com\">\n                <i className=\"fab fa-github\" aria-hidden=\"true\" id=\"git\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default Cover;\n","import React, { Component } from \"react\";\n\nclass AboutMe extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Me</h1>\n      </div>\n    );\n  }\n}\nexport default AboutMe;\n","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Contact Page</h1>\n      </div>\n    );\n  }\n}\nexport default Contact;\n","import React from \"react\";\nimport Cover from \"./Cover\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport Contact from \"./contact\";\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Cover} />\n    <Route exact path=\"/about\" component={AboutMe} />\n    <Route exact path=\"/contact\" component={Contact} />\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/main\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-color\" title=\"Portfolio\" scroll>\n            <Navigation>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n              {/* <Link to=\"/\">Link</Link>\n              <Link to=\"/\">Link</Link> */}\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.f62c7038.png\";"],"sourceRoot":""}